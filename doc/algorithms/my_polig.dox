/*!

@file algorithms/my_polig.dox 
@author Nika Adzhindzhal

@page my_polig Образование звездачтого полигона
@section overview Обзор


@section complexity Сложность
- Сложность алгоритма: O(n)
- Память: O(n * n)

n - количество вершин

@section implementation Реализация
Основные этапы работы:
1. Ввод параметров.
2. Проверка корректности входных данных.
3. Генерация вершин многоугольника.
4. Построение рёбер звезды.
5. Вывод результатов.

@subsection details Детали реализации
1. Структуры данных и вспомогательные функции
1.1. Структура Point
Хранит координаты точки на плоскости (x, y).
Используется для представления вершин многоугольника.

1.2. Функция gcd (НОД)
Рекурсивный алгоритм Евклида для нахождения наибольшего общего делителя.
Используется для проверки взаимной простоты n и k.

2. Основные функции
2.1. Генерация точек (generate_points)
Вход:
n — количество вершин,
radius — радиус окружности.

Выход: Вектор точек, равномерно распределённых по окружности.
Логика:
Для каждой вершины вычисляется угол θ = 2πi / n.
Координаты вычисляются через тригонометрические функции.

2.2. Построение рёбер (build_star_edges)
Вход:
n — количество вершин,
k — шаг соединения.
Выход: Вектор пар индексов вершин, задающих рёбра.

Логика:
Начинаем с вершины 0.
Каждую вершину соединяем с (current + k) % n.
Цикл завершается, когда возвращаемся в исходную точку.

3. Главная функция (main)
3.1. Ввод данных
Запрашивает у пользователя n и k.

3.2. Проверка корректности
Проверяет:
n ≥ 3 (иначе не получится многоугольник).
0 < k < n (шаг должен быть в допустимых пределах).
НОД(n, k) = 1 (иначе звезда будет несвязной).

3.3. Генерация и вывод вершин
Генерирует точки и выводит их координаты с точностью до 2 знаков после запятой.

3.4. Построение и вывод рёбер
Строит рёбра и выводит их в формате индекс_начала → индекс_конца.

4. Особенности реализации
Точность вычислений:
Используется double для координат, setprecision(2) для вывода.

Проверка входных данных:
Если n и k не взаимно просты, программа завершается с ошибкой.

Гибкость:
Работает для любых корректных n и k (например, n=7, k=3 даст семиконечную звезду).

*/