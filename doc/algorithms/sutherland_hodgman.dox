/*!
 * @file algorithms/sutherland_hodgman.dox 
 * @brief Documentation for Sutherland-Hodgman algorithm
 *
 * @page sutherland_hodgman Алгоритм Сазерленда-Ходгмана
 *
 * @subsection overview Обзор
 *
 * Алгоритм Сазерленда-Ходгмана для отсечения произвольного полигона выпуклым клипп-полигоном.
 * Реализация последовательно обрабатывает каждое ребро клипп-полигона как отсекающую плоскость.
 *
 * @subsection complexity Сложность
 * - Временная сложность: O(n*m)
 * - Память: O(n)
 *
 * n - число вершин субъект-полигона, m - число вершин клипп-полигона
 *
 * @section implementation Реализация
 * Основные этапы работы:
 * 1. Проверка минимального размера полигонов (не менее 3 вершин).
 * 2. Последовательная обработка каждого ребра клипп-полигона.
 * 3. Формирование нового полигона после каждого отсечения.
 * 4. Возврат итогового отсеченного полигона.
 *
 * @subsection details Детали реализации
 * 1. Обработка ребер клипп-полигона:
 *    - Для каждого ребра (cp1, cp2) клипп-полигона.
 *    - Построение нового полигона на основе текущего отсечения.
 *
 * 2. Проверка видимости точек:
 *    - Функция inside(p, cp1, cp2) определяет, находится ли точка p внутри ребра (cp1, cp2).
 *    - Используется векторное произведение для определения ориентации.
 *
 * 3. Вычисление пересечений:
 *    - При пересечении ребра субъект-полигона с ребром клипп-полигона.
 *    - Точка пересечения добавляется в новый полигон.
 *
 * 4. Формирование результата:
 *    - После обработки всех ребер клипп-полигона возвращается итоговый отсеченный полигон.
 *    - Если полигон полностью вне клипп-области - возвращается пустой результат.
 *
 */
